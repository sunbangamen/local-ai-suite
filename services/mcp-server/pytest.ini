[pytest]
# Pytest Configuration for MCP Server Security Tests

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual functions/classes
    integration: Integration tests for module interactions
    security: Security-specific tests (sandbox, RBAC, etc.)
    sandbox: Docker sandbox escape tests
    rbac: RBAC permission and bypass tests
    audit: Audit logging tests
    approval: Approval workflow tests (Issue #16)
    performance: Performance benchmark tests
    slow: Tests that take more than 1 second
    requires_docker: Tests requiring Docker runtime
    requires_db: Tests requiring SQLite database

# Async test support
asyncio_mode = auto

# Output options
addopts =
    -v
    --strict-markers
    --tb=short
    --disable-warnings

# Coverage options (optional)
# addopts = --cov=. --cov-report=html --cov-report=term

# Test paths
testpaths = tests

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (prevent hanging)
timeout = 60
timeout_method = thread
