# ========== Service Ports ==========
HOST=0.0.0.0
API_GATEWAY_PORT=8000
INFERENCE_PORT=8001
RAG_PORT=8002
EMBEDDING_PORT=8003
MCP_PORT=8020

# ========== Model Configuration ==========
# Phase 2: 3B Chat + 7B Code (RTX 4050 6GB optimized)
CHAT_MODEL=Qwen2.5-3B-Instruct-Q4_K_M.gguf
CODE_MODEL=qwen2.5-coder-7b-instruct-q4_k_m.gguf

# Phase 3: 7B Chat + 7B Code (recommended 8GB+ VRAM)
# CHAT_MODEL=Qwen2.5-7B-Instruct-Q4_K_M.gguf
# CODE_MODEL=qwen2.5-coder-7b-instruct-q4_k_m.gguf

# Model paths
MODELS_DIR=/mnt/e/ai-models
DATA_DIR=/mnt/e/ai-data

# ========== RAG Configuration ==========
QDRANT_URL=http://qdrant:6333
EMBEDDING_URL=http://embedding:8003
EMBEDDING_MODEL=BAAI/bge-small-en-v1.5

# RAG LLM Settings
RAG_LLM_TIMEOUT=120
RAG_LLM_MAX_TOKENS=256
RAG_LLM_TEMPERATURE=0.3

# RAG Search & Indexing
RAG_TOPK=4
RAG_CHUNK_SIZE=512
RAG_CHUNK_OVERLAP=100

# API Gateway Model Names (for RAG service)
API_GATEWAY_CHAT_MODEL=chat-7b
API_GATEWAY_CODE_MODEL=code-7b
API_GATEWAY_URL=http://api-gateway:8000

# ========== Timeout Configuration ==========
# LLM Request Timeouts
LLM_REQUEST_TIMEOUT=60           # General LLM API call timeout (seconds)
LLM_CONNECT_TIMEOUT=10           # LLM connection timeout (seconds)

# Service-specific Timeouts
QDRANT_TIMEOUT=30                # Qdrant query timeout (seconds)
EMBEDDING_TIMEOUT=30             # Embedding generation timeout (seconds)

# ========== Retry Configuration ==========
# Qdrant Retry Settings (for RAG service)
QDRANT_MAX_RETRIES=3             # Number of retry attempts
QDRANT_RETRY_MIN_WAIT=2          # Minimum wait time between retries (seconds)
QDRANT_RETRY_MAX_WAIT=10         # Maximum wait time between retries (seconds)

# ========== Llama.cpp Parameters ==========
# GPU Layer Configuration (Phase 2 specific)
CHAT_N_GPU_LAYERS=999            # Chat model: all layers on GPU (3B model)
CODE_N_GPU_LAYERS=20             # Code model: partial GPU, rest on CPU (7B model)

# General Llama.cpp Settings
LLAMA_N_GPU_LAYERS=999           # GPU layers (999=auto-max, for Phase 1/3)
LLAMA_PARALLEL=1                 # Parallel requests
LLAMA_TEMP=0.3                   # Temperature
LLAMA_TOP_P=0.9                  # Top-p sampling
LLAMA_REPEAT_PENALTY=1.05        # Repeat penalty

# ========== Security & RBAC (Issue #8) ==========
RBAC_ENABLED=false
SECURITY_DB_PATH=/mnt/e/ai-data/sqlite/security.db
SECURITY_QUEUE_SIZE=1000
SECURITY_LOG_LEVEL=INFO
SECURITY_MODE=normal
SANDBOX_ENABLED=true
RATE_LIMIT_ENABLED=true

# ========== Approval Workflow (Issues #16, #26, #40) ==========
# 승인 워크플로우 설정 (HIGH/CRITICAL 보안 레벨 도구 실행 시 관리자 승인 필요)
# 문서: docs/security/APPROVAL_GUIDE.md, docs/security/OPERATIONS_GUIDE.md

APPROVAL_WORKFLOW_ENABLED=false          # 승인 워크플로우 활성화 여부 (기본값: false)
                                         # 프로덕션: true (권장), 개발: false
                                         # 변경 후 반드시 `docker compose restart mcp-server` 실행

APPROVAL_TIMEOUT=300                     # 승인 요청 타임아웃 (초 단위, 기본값: 300 = 5분)
                                         # 낮은 값: 빠른 응답 요구, 높은 값: 관리자 여유 시간
                                         # 권장값: 300-600초 (5-10분)
                                         # 운영팀이 자주 부재 중인 경우: 600-900초

APPROVAL_POLLING_INTERVAL=1              # 승인 상태 폴링 간격 (초 단위, 기본값: 1)
                                         # CLI가 승인 완료를 체크하는 주기
                                         # 권장값: 1초 (변경 권장하지 않음, 시스템 부하↑)

APPROVAL_MAX_PENDING=50                  # 동시 대기 승인 요청 최대 개수 (기본값: 50)
                                         # 초과 시 새 요청은 즉시 실패 (403 Forbidden)
                                         # 권장값: 50-100 (동시 사용자 수에 따라 조정)